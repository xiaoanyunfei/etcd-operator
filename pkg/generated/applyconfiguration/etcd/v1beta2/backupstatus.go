/*
Copyright 2023 The etcd-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// BackupStatusApplyConfiguration represents an declarative configuration of the BackupStatus type for use
// with apply.
type BackupStatusApplyConfiguration struct {
	Succeeded       *bool    `json:"succeeded,omitempty"`
	Reason          *string  `json:"Reason,omitempty"`
	EtcdVersion     *string  `json:"etcdVersion,omitempty"`
	EtcdRevision    *int64   `json:"etcdRevision,omitempty"`
	LastSuccessDate *v1.Time `json:"lastSuccessDate,omitempty"`
}

// BackupStatusApplyConfiguration constructs an declarative configuration of the BackupStatus type for use with
// apply.
func BackupStatus() *BackupStatusApplyConfiguration {
	return &BackupStatusApplyConfiguration{}
}

// WithSucceeded sets the Succeeded field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Succeeded field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithSucceeded(value bool) *BackupStatusApplyConfiguration {
	b.Succeeded = &value
	return b
}

// WithReason sets the Reason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reason field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithReason(value string) *BackupStatusApplyConfiguration {
	b.Reason = &value
	return b
}

// WithEtcdVersion sets the EtcdVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EtcdVersion field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithEtcdVersion(value string) *BackupStatusApplyConfiguration {
	b.EtcdVersion = &value
	return b
}

// WithEtcdRevision sets the EtcdRevision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EtcdRevision field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithEtcdRevision(value int64) *BackupStatusApplyConfiguration {
	b.EtcdRevision = &value
	return b
}

// WithLastSuccessDate sets the LastSuccessDate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastSuccessDate field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithLastSuccessDate(value v1.Time) *BackupStatusApplyConfiguration {
	b.LastSuccessDate = &value
	return b
}
