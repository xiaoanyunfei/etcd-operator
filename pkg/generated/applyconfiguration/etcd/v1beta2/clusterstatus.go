/*
Copyright 2023 The etcd-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

import (
	v1beta2 "github.com/coreos/etcd-operator/pkg/apis/etcd/v1beta2"
)

// ClusterStatusApplyConfiguration represents an declarative configuration of the ClusterStatus type for use
// with apply.
type ClusterStatusApplyConfiguration struct {
	Phase          *v1beta2.ClusterPhase                `json:"phase,omitempty"`
	Reason         *string                              `json:"reason,omitempty"`
	ControlPaused  *bool                                `json:"controlPaused,omitempty"`
	Conditions     []ClusterConditionApplyConfiguration `json:"conditions,omitempty"`
	Size           *int                                 `json:"size,omitempty"`
	ServiceName    *string                              `json:"serviceName,omitempty"`
	ClientPort     *int                                 `json:"clientPort,omitempty"`
	Members        *MembersStatusApplyConfiguration     `json:"members,omitempty"`
	CurrentVersion *string                              `json:"currentVersion,omitempty"`
	TargetVersion  *string                              `json:"targetVersion,omitempty"`
}

// ClusterStatusApplyConfiguration constructs an declarative configuration of the ClusterStatus type for use with
// apply.
func ClusterStatus() *ClusterStatusApplyConfiguration {
	return &ClusterStatusApplyConfiguration{}
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *ClusterStatusApplyConfiguration) WithPhase(value v1beta2.ClusterPhase) *ClusterStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithReason sets the Reason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reason field is set to the value of the last call.
func (b *ClusterStatusApplyConfiguration) WithReason(value string) *ClusterStatusApplyConfiguration {
	b.Reason = &value
	return b
}

// WithControlPaused sets the ControlPaused field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ControlPaused field is set to the value of the last call.
func (b *ClusterStatusApplyConfiguration) WithControlPaused(value bool) *ClusterStatusApplyConfiguration {
	b.ControlPaused = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ClusterStatusApplyConfiguration) WithConditions(values ...*ClusterConditionApplyConfiguration) *ClusterStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithSize sets the Size field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Size field is set to the value of the last call.
func (b *ClusterStatusApplyConfiguration) WithSize(value int) *ClusterStatusApplyConfiguration {
	b.Size = &value
	return b
}

// WithServiceName sets the ServiceName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceName field is set to the value of the last call.
func (b *ClusterStatusApplyConfiguration) WithServiceName(value string) *ClusterStatusApplyConfiguration {
	b.ServiceName = &value
	return b
}

// WithClientPort sets the ClientPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientPort field is set to the value of the last call.
func (b *ClusterStatusApplyConfiguration) WithClientPort(value int) *ClusterStatusApplyConfiguration {
	b.ClientPort = &value
	return b
}

// WithMembers sets the Members field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Members field is set to the value of the last call.
func (b *ClusterStatusApplyConfiguration) WithMembers(value *MembersStatusApplyConfiguration) *ClusterStatusApplyConfiguration {
	b.Members = value
	return b
}

// WithCurrentVersion sets the CurrentVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CurrentVersion field is set to the value of the last call.
func (b *ClusterStatusApplyConfiguration) WithCurrentVersion(value string) *ClusterStatusApplyConfiguration {
	b.CurrentVersion = &value
	return b
}

// WithTargetVersion sets the TargetVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TargetVersion field is set to the value of the last call.
func (b *ClusterStatusApplyConfiguration) WithTargetVersion(value string) *ClusterStatusApplyConfiguration {
	b.TargetVersion = &value
	return b
}
