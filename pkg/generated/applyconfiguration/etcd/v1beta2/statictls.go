/*
Copyright 2023 The etcd-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

// StaticTLSApplyConfiguration represents an declarative configuration of the StaticTLS type for use
// with apply.
type StaticTLSApplyConfiguration struct {
	Member         *MemberSecretApplyConfiguration `json:"member,omitempty"`
	OperatorSecret *string                         `json:"operatorSecret,omitempty"`
}

// StaticTLSApplyConfiguration constructs an declarative configuration of the StaticTLS type for use with
// apply.
func StaticTLS() *StaticTLSApplyConfiguration {
	return &StaticTLSApplyConfiguration{}
}

// WithMember sets the Member field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Member field is set to the value of the last call.
func (b *StaticTLSApplyConfiguration) WithMember(value *MemberSecretApplyConfiguration) *StaticTLSApplyConfiguration {
	b.Member = value
	return b
}

// WithOperatorSecret sets the OperatorSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OperatorSecret field is set to the value of the last call.
func (b *StaticTLSApplyConfiguration) WithOperatorSecret(value string) *StaticTLSApplyConfiguration {
	b.OperatorSecret = &value
	return b
}
